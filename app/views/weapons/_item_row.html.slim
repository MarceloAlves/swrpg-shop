- item = item.last if item.is_a? Array
tr
  td.p-1.align-middle
    = item.fetch('name')
    = content_tag(:span, '(R)', class: 'restricted-item ml-1') if item.dig('is_restricted')
  td.p-1.align-middle.text-center[data-sort-value="#{item.fetch('price')}"]
    = number_with_delimiter item.fetch('price')
  td.p-1.align-middle.text-center
    = item.fetch('damage')
  td.p-1.align-middle.text-center
    = item.fetch('crit')
  td.p-1.align-middle.text-center
    = item.fetch('rarity')
  td.p-1.align-middle.text-center
    = item.fetch('encumbrance')
  td.p-1.align-middle.text-center
    = item.fetch('hard_points')
  td.p-1.align-middle
    = item.fetch('weapon_type', item.dig('type'))
  td.p-1.align-middle
    = format_skill(item.fetch('skill_key'))
  td.p-1.align-middle
    = item.fetch('range_value').remove(/^wr/)
  td.p-1.align-middle
    - item.fetch('qualities', []).each do |quality|
      p= format_qualities(quality.values)
  td.p-1.align-middle
    = roll_results(item.fetch('roll_total'){ [0,0,0] })
  td.p-1.align-middle
    - list_sources(item.fetch('description'), item.fetch('sources')).each do |source|
      - abbr = content_tag(:abbr, source[:sourcebook].split(' ').map(&:first).join, title: source[:sourcebook])
      - page = ":#{source[:page]}"
      = content_tag(:p, safe_join([abbr, page]))
